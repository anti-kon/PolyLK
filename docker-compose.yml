version: '3'

services:
    django-registration:
        build:
            context: ${POLYLK_REGISTRATION_PATH}
        entrypoint: /bin/sh -c "./wait-for-it.sh ${POLYLK_EUREKA_SERVER_HOSTNAME}:${POLYLK_EUREKA_SERVER_PORT} -t 0 &&
                             ./wait-for-it.sh ${POLYLK_DATABASE_HOSTNAME}:${POLYLK_DATABASE_PORT} -t 0 &&
                             ./start.sh"
        hostname: ${POLYLK_REGISTRATION_HOSTNAME}
        container_name: ${POLYLK_REGISTRATION_NAME}
        env_file:
            - .env
        depends_on:
            - postgres-db
            - eureka-server
        deploy:
            resources:
                limits:
                    memory: 200M

    django-authorization:
        build:
            context: ${POLYLK_AUTHORIZATION_PATH}
        entrypoint: /bin/sh -c "./wait-for-it.sh ${POLYLK_EUREKA_SERVER_HOSTNAME}:${POLYLK_EUREKA_SERVER_PORT} -t 0 &&
                             ./wait-for-it.sh ${POLYLK_DATABASE_HOSTNAME}:${POLYLK_DATABASE_PORT} -t 0 &&
                             ./start.sh"
        hostname: ${POLYLK_AUTHORIZATION_HOSTNAME}
        container_name: ${POLYLK_AUTHORIZATION_NAME}
        env_file:
            - .env
        depends_on:
            - postgres-db
            - eureka-server
        deploy:
            resources:
                limits:
                    memory: 200M

    django-info-person:
        build:
            context: ${POLYLK_INFO_PERSON_PATH}
        entrypoint: /bin/sh -c "./wait-for-it.sh ${POLYLK_EUREKA_SERVER_HOSTNAME}:${POLYLK_EUREKA_SERVER_PORT} -t 0 &&
                             ./wait-for-it.sh ${POLYLK_DATABASE_HOSTNAME}:${POLYLK_DATABASE_PORT} -t 0 &&
                             ./start.sh"
        hostname: ${POLYLK_INFO_PERSON_HOSTNAME}
        container_name: ${POLYLK_INFO_PERSON_NAME}
        env_file:
            - .env
        depends_on:
            - postgres-db
            - eureka-server
        deploy:
            resources:
                limits:
                    memory: 200M

    django-news:
        build:
            context: ${POLYLK_NEWS_PATH}
        entrypoint: /bin/sh -c "./wait-for-it.sh ${POLYLK_EUREKA_SERVER_HOSTNAME}:${POLYLK_EUREKA_SERVER_PORT} -t 0 &&
                             ./wait-for-it.sh ${POLYLK_DATABASE_HOSTNAME}:${POLYLK_DATABASE_PORT} -t 0 &&
                             ./start.sh"
        hostname: ${POLYLK_NEWS_HOSTNAME}
        container_name: ${POLYLK_NEWS_NAME}
        env_file:
            - .env
        depends_on:
            - postgres-db
            - eureka-server
        deploy:
            resources:
                limits:
                    memory: 200M

    django-posts:
        build:
            context: ${POLYLK_POSTS_PATH}
        entrypoint: /bin/sh -c "./wait-for-it.sh ${POLYLK_EUREKA_SERVER_HOSTNAME}:${POLYLK_EUREKA_SERVER_PORT} -t 0 &&
                             ./wait-for-it.sh ${POLYLK_DATABASE_HOSTNAME}:${POLYLK_DATABASE_PORT} -t 0 &&
                             ./start.sh"
        hostname: ${POLYLK_POSTS_HOSTNAME}
        container_name: ${POLYLK_POSTS_NAME}
        env_file:
            - .env
        depends_on:
            - postgres-db
            - eureka-server
        deploy:
            resources:
                limits:
                    memory: 200M

    django-queues:
        build:
            context: ${POLYLK_QUEUES_PATH}
        entrypoint: /bin/sh -c "./wait-for-it.sh ${POLYLK_EUREKA_SERVER_HOSTNAME}:${POLYLK_EUREKA_SERVER_PORT} -t 0 &&
                             ./wait-for-it.sh ${POLYLK_DATABASE_HOSTNAME}:${POLYLK_DATABASE_PORT} -t 0 &&
                             ./start.sh"
        hostname: ${POLYLK_QUEUES_HOSTNAME}
        container_name: ${POLYLK_QUEUES_NAME}
        env_file:
            - .env
        depends_on:
            - postgres-db
            - eureka-server
        deploy:
            resources:
                limits:
                    memory: 200M
    
    postgres-db:
        image: postgres
        hostname: ${POLYLK_DATABASE_HOSTNAME}
        container_name: ${POLYLK_DATABASE_SERVER_NAME}
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        environment:
            - POSTGRES_DB=${POLYLK_DATABASE_NAME}
            - POSTGRES_PASSWORD=${POLYLK_DATABASE_PASSWORD}
            - POSTGRES_USER=${POLYLK_DATABASE_USER}
            - POSTGRES_HOST_AUTH_METHOD=trust

    api-gateway:
        build:
            context: ${POLYLK_API_GATEWAY_PATH}
        entrypoint: /bin/sh -c "api_gateway/wait-for-it.sh ${POLYLK_EUREKA_SERVER_HOSTNAME}:${POLYLK_EUREKA_SERVER_PORT} -t 0 &&
                             api_gateway/wait-for-it.sh ${POLYLK_REGISTRATION_HOSTNAME}:${POLYLK_REGISTRATION_PORT} -t 0 &&
                             api_gateway/wait-for-it.sh ${POLYLK_AUTHORIZATION_HOSTNAME}:${POLYLK_AUTHORIZATION_PORT} -t 0 &&
                             api_gateway/wait-for-it.sh ${POLYLK_INFO_PERSON_HOSTNAME}:${POLYLK_INFO_PERSON_PORT} -t 0 &&
                             api_gateway/wait-for-it.sh ${POLYLK_NEWS_HOSTNAME}:${POLYLK_NEWS_PORT} -t 0 &&
                             api_gateway/wait-for-it.sh ${POLYLK_POSTS_HOSTNAME}:${POLYLK_POSTS_PORT} -t 0 &&
                             api_gateway/wait-for-it.sh ${POLYLK_QUEUES_HOSTNAME}:${POLYLK_QUEUES_PORT} -t 0 &&
                             java -jar api_gateway/app.jar --spring.profiles.active=docker"
        hostname: ${POLYLK_API_GATEWAY_HOSTNAME}
        container_name: ${POLYLK_API_GATEWAY_NAME}
        ports:
            - "8080:8080"
        env_file:
            - .env
        environment:
            - eureka.client.service-url.defaultZone=http://${POLYLK_EUREKA_SERVER_HOSTNAME}:${POLYLK_EUREKA_SERVER_PORT}/eureka/
            - JAVA_OPTIONS='-Xmx300m'
        depends_on:
            - eureka-server
            - django-registration
            - django-authorization
            - django-info-person
            - django-news
            - django-queues
    
    eureka-server:
        build:
            context: ${POLYLK_EUREKA_SERVER_PATH}
        hostname: ${POLYLK_EUREKA_SERVER_HOSTNAME}
        ports:
            - "8761:8761"
        environment:
            - JAVA_OPTIONS='-Xmx300m'
        env_file:
            - .env
        restart: always

    frontend:
        build:
            context: ./frontend/
        entrypoint: /bin/sh -c "serve -s build"
        ports:
            - "80:3000"
        volumes:
            - frontend_build:/frontend/build
        environment:
            - NODE_OPTIONS=--max_old_space_size=1000
        deploy:
            resources:
                limits:
                    memory: 1000M

#    nginx:
#        image: nginx:latest
#        ports:
#          - "80:8080"
#        volumes:
#          - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
#          - frontend_build:/var/www/frontend
#        depends_on:
#          - frontend
#          - api-gateway
#          - django-registration
#          - django-authorization
#          - django-info-person
#          - django-news
#          - django-queues

volumes:
    frontend_build:
    postgres_data: