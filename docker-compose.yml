version: '3'

services:
#  django-registration:
#    build:
#      context: ./microservices/registration/
#    command: ["sh", "./start.sh"]
#    ports:
#      - "8001:8000"
#    depends_on:
#      - postgres-db
#      - eureka-server

  django-authorization:
    build:
      context: ./microservices/authorization/
    entrypoint: bash -c "./wait-for-it.sh eureka-server:8761 && ./start.sh"
    ports:
      - "8002:8000"
    depends_on:
      - postgres-db
      - eureka-server

#  django-info-person:
#    build:
#      context: ./microservices/info_person/
#    command: [ "sh", "./start.sh" ]
#    ports:
#      - "8003:8000"
#    depends_on:
#      - postgres-db
#      - eureka-server

#  django-news:
#    build:
#      context: ./microservices/news/
#    command: [ "sh", "./start.sh" ]
#    ports:
#      - "8004:8000"
#    depends_on:
#      - postgres-db
#      - eureka-server

#  django-queues:
#    build:
#      context: ./microservices/news/
#    command: [ "sh", "./start.sh" ]
#    ports:
#      - "8005:8000"
#    depends_on:
#      - postgres-db
#      - eureka-server

  postgres-db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=PolyLK
      - POSTGRES_PASSWORD=PMIdatabase
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust

  api-gateway:
    build:
      context: ./microservices/api_gateway/api-gateway/
    entrypoint: bash -c "api_gateway/wait-for-it.sh eureka-server:8761 && api_gateway/wait-for-it.sh django-authorization:8000 && java -jar api_gateway/app.jar --spring.profiles.active=docker"
    ports:
      - "8080:8080"
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
    depends_on:
      - eureka-server
#      - django-registration
      - django-authorization
#      - django-info-person
#      - django-news
#      - django-queues

  eureka-server:
    build:
      context: ./microservices/eureka_server/eureka-server/
    hostname: eureka-server
    ports:
      - "8761:8761"
    restart: always

#  frontend:
#    build:
#      context: ./frontend/
#    ports:
#      - "3000:3000"
#    volumes:
#      - frontend_build:/frontend/build

#  nginx:
#    image: nginx:latest
#    ports:
#      - "80:8080"
#    volumes:
#      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
#      - frontend_build:/var/www/frontend
#    depends_on:
#      - frontend
#      - api-gateway
#      - django-registration
#      - django-authorization
#      - django-info-person
#      - django-news
#      - django-queues

volumes:
#  frontend_build:
  postgres_data: