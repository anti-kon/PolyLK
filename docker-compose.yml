version: '3'

services:
  django_registration:
    build:
      context: ./microservices/registration/
    command: ["sh", "./start.sh"]
    ports:
      - "8001:8000"
    depends_on:
      - postgres_db
      - eureka_server

  django_authorization:
    build:
      context: ./microservices/authorization/
    command: [ "sh", "./start.sh" ]
    ports:
      - "8002:8000"
    depends_on:
      - postgres_db
      - eureka_server

  django_info_person:
    build:
      context: ./microservices/info_person/
    command: [ "sh", "./start.sh" ]
    ports:
      - "8003:8000"
    depends_on:
      - postgres_db
      - eureka_server

  django_news:
    build:
      context: ./microservices/news/
    command: [ "sh", "./start.sh" ]
    ports:
      - "8004:8000"
    depends_on:
      - postgres_db
      - eureka_server

  django_queues:
    build:
      context: ./microservices/news/
    command: [ "sh", "./start.sh" ]
    ports:
      - "8005:8000"
    depends_on:
      - postgres_db
      - eureka_server

  postgres_db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=PolyLK
      - POSTGRES_PASSWORD=PMIdatabase
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust

  api_gateway:
    build:
      context: ./microservices/api_gateway/api-gateway/
    ports:
      - "8080:8080"
    depends_on:
      - eureka_server
      - django_registration
      - django_authorization
      - django_info_person
      - django_news
      - django_queues

  eureka_server:
    build:
      context: ./microservices/eureka_server/eureka-server/
    ports:
      - "8761:8761"

  frontend:
    build:
      context: ./frontend/
    volumes:
      - frontend_build:/frontend/build

  nginx:
    image: nginx:latest
    ports:
      - "80:8080"
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_build:/var/www/frontend
    depends_on:
      - frontend
      - api_gateway
      - django_registration
      - django_authorization
      - django_info_person
      - django_news
      - django_queues

volumes:
  frontend_build:
  postgres_data: